use quirky_binder::{
    filter::{
        function::{
            execute::function_execute,
            produce::function_produce,
        },
    },
};
use quirky_binder_csv::write_csv;

{
  (
      function_produce(
        fields: [("hello", "String"), ("universe", "usize")],
        body: r#"
            let record = new_record("world".to_string(), 42);
            output.send(Some(record))?;
            output.send(None)?;
            Ok(())
"#,
      )
    - write_csv(
        output_file: "output/hello_universe.csv",
        has_headers: true,
      )
  )

  (
      function_execute#assert_output(
        thread_type: Background,
        body: r###"
            // Wait until the end of the execution to read the output and assert its content
            thread_control.wait_until_interrupted();

            let actual = std::fs::read_to_string("output/hello_universe.csv").expect("actual");
            assert_eq!(actual, r#"hello,universe
world,42
"#);

            Ok(())
        "###,
      )
  )
}
