use quirky_binder::{
    filter::{
        accumulate::accumulate,
        fork::{
            extract_fields::extract_fields,
            join::join,
        },
        group::group,
        sink::sink,
        sort::sort,
        source::function::function_source,
        unwrap::unwrap,
    },
};

{
  (
      function_source#read_fs(
        fields: [("id", "usize"), ("file_name", "String"), ("path", "String"), ("parent_id", "Option<usize>")],
        order_fields: Some(["id"]),
        distinct_fields: Some(["id"]),
        function: r#"
            todo!();
"#,
      )
    - extract_fields(fields: ["id", "parent_id"]) [extracted]
    - accumulate()
    - [children] join(primary_fields: ["id"], secondary_fields: ["parent_id"])
    - sink(
        debug: Some(r#"
            println!(
                "({}) {} ({:?}) / {}, children: {:?}",
                record.id(),
                record.path(),
                record.parent_id(),
                record.file_name(),
                record.children().iter().map(|rec| rec.id()).collect::<Vec<_>>()
            );
        "#)
      )
  )

  ( < extracted
    - unwrap(fields: ["parent_id"], skip_nones: true)
    - sort(fields: ["parent_id", "id"])
    - group(fields: ["id"], group_field: "children")
    -> children
  )
}
